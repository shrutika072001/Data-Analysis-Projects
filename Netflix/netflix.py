# -*- coding: utf-8 -*-
"""NETFLIX.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_o07T8TnkYlgwPzD63tYFpQu7vuBNJkl

# **NETFLIX DATA ANALYSIS**

---
## Data Analysis using Python

Importing libraries and dataset
"""

import pandas as pd
data=pd.read_csv("/content/Netflix_Dataset.csv")

"""**Getting the details of Data** <br>
Shapes, Size and datatypes

"""

data.head(5)

data.head()

data.tail()

data.shape

data.size

data.columns

data.dtypes

data.info()

"""**Find Duplicates and drop that duplicate values**"""

data[data.duplicated()]

data.drop_duplicates(inplace=True)

data[data.duplicated()]

"""## **Data Filtering**

---

**Check wether there is null value or not and count the null values.**
"""

data.isnull()

data.isnull().sum()

"""**Show the representation of null values using heatmap.**"""

import seaborn as sns
sns.heatmap(data.isnull())

data.head()

"""Find the show having title **House of Cards**."""

data[data['Title'].isin(['House of Cards'])]
# data[data['Title'].str.contains('House of Cards')] ----- another function for same result

data.dtypes

"""**Find in which year most of the TV Shows and Movies are released and plot the graph for the same.**"""

data['Date']=pd.to_datetime(data['Release_Date'])

data.head()

data.dtypes

data['Date'].dt.year.value_counts()

data['Date'].dt.year.value_counts().plot(kind='bar')

"""**Count and Represent the TV Shows and Movies data graphically.**"""

data.groupby('Category').Category.count()

sns.countplot(data['Category'])

"""**Find the Movies released in the year of 2000.**"""

data.head()

"""Here first we create the column having the data of year only from the **Date** Column."""

data['Year']=data['Date'].dt.year

data.head(2)

data[(data['Category']=='Movie') & (data['Year']==2020)]

"""**Find the Title of TV Shows that belongs to India.**"""

data.head(2)

data[(data['Category']=='TV Show') & (data['Country']=='India')]['Title']

"""**Top 10 Director.**"""

data.head(2)

data['Director'].value_counts().head(10)

"""**Find the Movie of Type Comedies having Country Canada but not neccessarily.**"""

data.head(5)

data[(data['Category']=='Movie') & (data['Type']=='Comedies')| (data['Country']=='United Kingdom')]

data.head(2)

new=data.dropna()
new.head(2)

"""**Shows having casting of Tom Cruise.**"""

new[new['Cast'].str.contains('Tom Cruise')]

"""**Rating**"""

data.head(2)

data['Rating'].nunique()

data['Rating'].unique()

"""**How many Movies having Rating TV-14 and are from Canada.**"""

data.head(2)

data[(data['Category']=='Movie') &(data['Rating']=='TV-14') & (data['Country']=='Canada')].shape

"""**TV Shows having rating R released after 2018.**"""

data[(data['Category']=='TV Show') &(data['Rating']=='R') & (data['Year']>2018)]

"""**Highest duration.**"""

data.head(2)

data['Duration'].unique()

data.Duration.dtypes

data[['Minutes','Unit']]=data['Duration'].str.split(' ',expand=True)

data.head(2)

data.Minutes.max()

"""**In which Country hightest TV Shows are released.**"""

data.head(2)

data_tv=data[data['Category']=='TV Show']

data_tv.head(2)

data_tv.Country.value_counts()

data_tv.Country.value_counts().head(1)

"""# **Sorting**
---
**Sort the data by year.**



"""

data.sort_values(by='Year').head(5)

data.sort_values(by='Year',ascending=False).head(5)

"""**TV Shows having type Dramas and Movies having Type Kid's TV.**"""

data[((data['Category']=='Movie') & (data['Type']=='Dramas'))|((data['Category']=='TV Show') & (data['Type']=="Kid's TV"))].head(5)